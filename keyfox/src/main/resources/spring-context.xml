<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/data/mongo    
http://www.springframework.org/schema/data/mongo/spring-mongo.xsd 
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
http://www.springframework.org/schema/task  
http://www.springframework.org/schema/task/spring-task-4.1.xsd
">
	
	<context:annotation-config />
	<mvc:annotation-driven />
	
  	<mvc:interceptors>
		<bean class="com.keyware.base.context.TokenInterceptor" />
		<!-- <mvc:interceptor>
			<mvc:mapping path="/**" />
			如果不配置或/*,将拦截所有的Controller
			<bean class="common.filter.IpInterceptor" />
		</mvc:interceptor> -->
		<!-- <mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="common.filter.ExternalRequestInterceptor" />
		</mvc:interceptor> -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<!-- 如果不配置或/*,将拦截所有的Controller -->
			<bean class="com.keyware.base.filter.KDInterceptor" />
		</mvc:interceptor>
		
	</mvc:interceptors>   

	<!-- <context:component-scan base-package="com.keyware.base.controller,com.keyware.base.repository,com.keyware.base.service,com.keyware.base.task,com.keyware.base.memcached,com.keyware.base.listener" /> -->
		
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages" />
		<property name="fileEncodings" value="utf-8" />
		<property name="cacheSeconds" value="120" />
	</bean>

	<!--FreeMarker模板 -->
	<bean id="freeMarkerConfigurer"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF" />
		<!--<property name="templateLoaderPath" value="/template" /> -->
		<property name="freemarkerSettings">
			<props>
				<prop key="locale">zh_CN</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="auto_import">/template/common/spring.ftl as spring</prop>
			</props>
		</property>
	</bean>
	
	<!-- 在普通类里面就可以获得Spring上下文对象，以及注入的bean -->
	<bean id="SpringContextUtil" class="com.keyware.base.task.util.SpringContextUtil"
		scope="singleton" />
	<!-- 将多个配置文件读取到容器中，交给Spring管理   -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" scope="singleton">  
        <property name="locations">  
            <list>  
              <!-- 这里支持多种寻址方式：classpath和file -->  
              <value>classpath:jdbc.properties</value>
              <!-- <value>classpath:rds.properties</value> -->
              <value>classpath:mail.properties</value>
               <value>classpath:keyfox.properties</value>
              <!-- 暂时不加缓存 -->
              <!-- <value>classpath:memcached.properties</value> -->
              <!-- 消息机制暂时不加 -->
              <!-- <value>classpath:rocketmq.properties</value> -->
            </list>  
        </property>  
    </bean>
	<import resource="applicationContext.xml" />
	<import resource="applicationContext-email.xml" />
	<!-- <import resource="applicationContext-quartz.xml" /> -->
	<!-- <import resource="applicationContext-rds.xml" /> -->
	<!-- <import resource="applicationContext-memcached.xml" /> -->
</beans>